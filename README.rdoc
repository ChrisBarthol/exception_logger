= Exception Logger for Rails3.2.x

This gem is evolved from the outdated exception_logger gem. I refined it with the mountable rails engine. That make it conveniet to
mount it to any existing rails app.

== Install

Inside your Gemfile:

  gem "exception_logger", :require => "exception_logger"

and then run:

  bundle install

=== Gem Dependencies

Please check if all those requirements are satisfied on your environment.

* will_paginate >= 3.0.3 # (used for pagination)
* rails >= 3.2.1

=== Inside your ApplicationController:

  include ExceptionLogger::ExceptionLoggable # loades the module
  rescue_from Exception, :with => :log_exception_handler # tells rails to forward the 'Exception' (you can change the type) to the handler of the module

=== Inside your config/routes.rb

  mount ExceptionLogger::Engine => "/exception_logger"

=== Database Setup

Use

  rake exception_logger:install:migrations

This will create a database migration

  TIMESTAMP_create_exception_logger_logged_exceptions.exception_logger.rb

inside db/migrations

Then

  rake db:migrate

== Authentication

If you want, and believe me you want that, you can add the following lines to your environment to enable Authentication

Example uses the declarative_authorization gem

in config/environment/production.rb:

  config.after_initialize do
    LoggedExceptionsController.class_eval do
      # include any custom auth modules you need
      # (declarative authorization gem used)
      filter_resource_access
      # just add any code you want to be included in the controller ;)
      # optional, sets the application name for the rss feeds
      self.application_name = "Your Application Name"
    end
  end

and (if you use declarative_authorization) add this to your authorization_rules.rb file:

  role :admin do
    has_permission_on :logged_exceptions, :to => :manage
    ...

== Testing & Development

Not implemented yet.

This project rocks and uses MIT-LICENSE.
